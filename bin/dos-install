#!/usr/bin/env node

/**
 * Module dependencies.
 */
var fs = require('fs');
var exists = fs.existsSync;
var read = fs.readFileSync;
var write = fs.writeFileSync;
var parse = JSON.parse;
var stringify = JSON.stringify;
var path = require('path');
var resolve = path.resolve;
var merge = require('merge-util');
var exec = require('child_process').exec;
var program = require('commander');
var installc = resolve('./node_modules/.bin/component-install');
var crypto = require('crypto');
var env = process.env.NODE_ENV || 'development';

program
  .option('-c, --config', 'copy and/or merge configuration file')
  .option('-C, --no-components', 'ignore components install')
  .parse(process.argv);


/**
 * Make sure there is a config file
 */

if (program.config) {
  var dest = resolve('./config/' + env + '.json');
  var orig = resolve('./config/defaults.json');
  if (!exists(dest)) {
    var token = crypto.randomBytes(32).toString('hex');
    write(dest, stringify({ secret: token }, null, 2));
  }
}

if (program.components && exists(installc)) {
  exec(installc, function(err, stdout, stderr) {
    if (stdout.length) console.log(stdout);
    if (stderr.length) return console.log(stderr), process.exit(1);
    if (err != null) return console.log(err), process.exit(1);
  });
}
